# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    staging_basic_auth.enabled: '%env(bool:STAGING_BASIC_AUTH_ENABLED)%'
    staging_basic_auth.user: '%env(default::STAGING_BASIC_AUTH_USER)%'
    staging_basic_auth.pass: '%env(default::STAGING_BASIC_AUTH_PASS)%'
    staging_basic_auth.realm: '%env(default:CleanWhiskers Staging:STAGING_BASIC_AUTH_REALM)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    App\Infrastructure\Doctrine\SlugListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    App\Infrastructure\Doctrine\ContentSanitizerListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    App\Seed\Seeder:
        public: true

    App\Security\StagingBasicAuthSubscriber:
        arguments:
            $enabled: '%staging_basic_auth.enabled%'
            $username: '%staging_basic_auth.user%'
            $password: '%staging_basic_auth.pass%'
            $realm: '%staging_basic_auth.realm%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
