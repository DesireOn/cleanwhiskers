name: Run PHPUnit tests on PR

on:
  pull_request:
    branches:
      - staging

jobs:
  phpunit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_mysql, sqlite3, pdo_sqlite
          coverage: none

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Ensure migrations are in sync (diff check)
        run: |
          set -e
          export APP_ENV=test
          export DATABASE_URL="sqlite:///%kernel.project_dir%/var/migrations_ci.sqlite"
          rm -f var/migrations_ci.sqlite || true
          mkdir -p var
          touch var/migrations_ci.sqlite
          php bin/console doctrine:migrations:migrate --no-interaction
          # Run diff; it will create a migration file if mapping != schema
          php bin/console doctrine:migrations:diff --no-interaction || true
          CHANGED=$( (git ls-files -m migrations/; git ls-files --other --exclude-standard migrations/) | wc -l )
          if [ "$CHANGED" -ne 0 ]; then
            echo "::error::Doctrine mapping has unapplied changes. Run 'php bin/console make:migration' and commit the result."
            echo "Changed or new files under migrations/:"
            git ls-files -m migrations/ || true
            git ls-files --other --exclude-standard migrations/ || true
            exit 1
          fi

      - name: Run PHPUnit
        run: ./bin/phpunit --testdox
